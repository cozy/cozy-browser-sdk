{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "lib/binaries.js",
    "lib/crud.js",
    "lib/index.js",
    "lib/requests.js",
    "lib/utils/client.js",
    "lib/utils/promiser.js"
  ],
  "names": [],
  "mappingspnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// Generated by CoffeeScript 1.8.0\nvar client, promiser;\n\nclient = require('./utils/client');\n\npromiser = require('./utils/promiser');\n\n\n/**\n <h2>cozysdk functions to manipulate document binaries</h2>\n\n Binaries can be attached to a document.\n Attaching binaries is not supported in cozysdk for browser, if your\n application needs to create document with binaries, add +1 to the\n <a href=\"https://github.com/cozy/cozy-browser-sdk/issues/14\">Github ticket</a>\n related to this feature.\n\n @module binaries\n */\n\n\n/**\nCreate a binary linked to the document matching ID. Several binaries\ncan be attached to a document, so a name is required to distinguish them.\n\n@function\n\n@arg {string} docType - The docType of the document to add a binary from.\n@arg {string} id - The id of the document to add a binary from.\n@arg {object} file - An object containing either the binary to create or an URL.\n@arg {string} [name] - The name of the binary attached. (filename by default)\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>fromURL</caption>\ncozysdk.addBinary('File', 524fileid452, { fromURL: 'http://...' }, 'file')\n\n@example <caption>fromBinary</caption>\ncozysdk.addBinary('File', 524fileid452, { fromBinary: blob }, 'file')\n */\n\nmodule.exports.addBinary = promiser(function(docType, id, file, name, callback) {\n  var formData, path;\n  path = \"/data/\" + id + \"/binaries/\";\n  formData = new FormData();\n  if (callback == null) {\n    callback = name;\n  } else {\n    formData.append('name', name);\n  }\n  if (file.fromBinary != null) {\n    formData.append('file', file.fromBinary);\n  } else if (file.fromURL != null) {\n    formData.append('fromURL', file.fromURL);\n  }\n  return client.post(path, formData, function(error, response, body) {\n    if (error) {\n      return callback(error);\n    } else if (response.status !== 201) {\n      return callback(new Error(\"\" + response.status + \" -- Server error occured.\"));\n    } else {\n      return callback(null, body);\n    }\n  });\n});\n\n\n/**\nDelete binary linked to the document matching ID. Several binaries\ncan be attached to a document, so a name is required to know which file\nshould be deleted.\n\n@function\n\n@arg {string} docType - The docType of the document to remove a binary from.\n@arg {string} id - The id of the document to remove a binary from.\n@arg {string} name - The name of the binary to destroy.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\ncozysdk.removeBinary('Note', '524noteid452', 'image.jpg', function(err){\n    // image.jpg has been removed from note 524noteid452\n});\n@example <caption>promise</caption>\ncozysdk.removeBinary('Note', '524noteid452', 'image.jpg')\n */\n\nmodule.exports.removeBinary = promiser(function(docType, id, name, callback) {\n  var path;\n  path = \"/data/\" + id + \"/binaries/\" + name;\n  return client.del(path, {}, function(error, response, body) {\n    if (error) {\n      return callback(error);\n    } else if (response.status !== 204) {\n      return callback(new Error(\"\" + response.status + \" -- Server error occured.\"));\n    } else {\n      return callback(null, body);\n    }\n  });\n});\n\n\n/**\nBuild file url for file linked to the document matching ID. Several binaries\ncan be attached to a document, so a name is required to know which file\nshould be retrieved.\nIt's useful when you want to retrieve a file from the file application or a\npicture from the photo app.\n\n@function\n\n@arg {string} docType - The docType of the document to retrieve a binary from.\n@arg {string} id - The id of the document to retrieve a binary from.\n@arg {string} name - The name of the binary to retrieve.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\ncozysdk.getBinaryURL('Note', '524noteid452', 'image.jpg', function(err, url){\n    img.src = url\n    // url = 'https://your.cozy.cloud/ds-api/524noteid542/binaries/...\n    //                                ...image.jpg?=token=zdkgzerozernxwxoicvh'\n});\n@example <caption>promise</caption>\ncozysdk.getBinaryURL('Note', '524noteid452', 'image.jpg')\n */\n\nmodule.exports.getBinaryURL = promiser(function(docType, id, name, callback) {\n  var host, path;\n  path = \"/ds-api/data/\" + id + \"/binaries/\" + name;\n  host = window.location.host;\n  return client.getToken(function(err, auth) {\n    var url;\n    if (err) {\n      return callback(err);\n    }\n    auth = \"Basic \" + btoa(\"\" + auth.appName + \":\" + auth.token);\n    url = \"\" + window.location.protocol + \"//\" + host + path;\n    url += \"?authorization=\" + auth;\n    return callback(null, encodeURI(url));\n  });\n});\n",
    "// Generated by CoffeeScript 1.8.0\nvar client, promiser;\n\nclient = require('./utils/client');\n\npromiser = require('./utils/promiser');\n\n\n/**\n <h2>Cozysdk CRUD functions</h2>\n\nThey are basic functions to manipulate data documents from the Cozy:\n<ul>\n<li>Create a document [cozysdk.create]{@link module:crud.create }</li>\n<li>Find a document [cozysdk.find]{@link module:crud.find }</li>\n<li>Update a document\n    [cozysdk.updateAttributes]{@link module:crud.updateAttributes}</li>\n<li>Delete a document [cozysdk.destroy]{@link module:crud.destroy }</li>\n</ul>\n\n @module crud\n\n @tutorial doctype\n */\n\n\n/**\nCreates a new document for given doc type with fields given\nin the attributes object.\n\n@function\n@arg {string} docType - The doctype you want to create.\n@arg {object} attributes - The attributes your document should have.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\nvar attributes = {title:\"hello\", content:\"world\"}\ncozysdk.create('Note', attributes, function(err, obj){\n    console.log(obj.id)\n});\n@example <caption>promise</caption>\nvar attributes = {title:\"hello\", content:\"world\"}\ncozysdk.create('Note', attributes)\n    .then(function(obj){ console.log(obj.id) } );\n */\n\nmodule.exports.create = promiser(function(docType, attributes, callback) {\n  attributes.docType = docType;\n  if (attributes.id != null) {\n    return callback(new Error('cant create an object with a set id'));\n  }\n  return client.post(\"data/\", attributes, function(error, response, body) {\n    if (error) {\n      return callback(new Error(\"\" + response.status + \" -- \" + body.id + \" -- \" + error));\n    } else {\n      return callback(null, JSON.parse(body));\n    }\n  });\n});\n\n\n/**\nRetrieve a document by its ID.\n\n@function\n@arg {string} docType - The doctype you want to retrieve.\n@arg {string} id - The id of the document you want to retrieve.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\ncozysdk.find('Note', '732732832832', function(err, note){ note.title });\n@example <caption>promise</caption>\ncozysdk.find('Note', '732732832832').then( function(note){ note.title } );\n */\n\nmodule.exports.find = promiser(function(docType, id, callback) {\n  return client.get(\"data/\" + id + \"/\", null, function(error, response, body) {\n    if (error) {\n      return callback(error);\n    } else if (response.status === 404) {\n      return callback(new Error(\"\" + response.status + \" -- \" + body.id + \" -- Error in finding object\"));\n    } else {\n      return callback(null, JSON.parse(body));\n    }\n  });\n});\n\n\n/**\nUpdate attributes of the document that matches given doc type and given ID..\n\n@function\n@arg {string} docType - The doctype of the document you want to change.\n@arg {string} id - The id of the document you want to change.\n@arg {object} attrs - The changes you want to make.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\ncozysdk.find('Note', '732732832832', function(err, note){\n    console.log(note) // {title: \"hello\", content: \"world\"}\n    var changes = {title: \"Hola\"};\n    cozysdk.updateAttributes('Note', '732732832832', changes, function(){\n        // note now is {title: \"Hola\", content: \"world\"}\n    });\n});\n@example <caption>promise</caption>\ncozysdk.find('Note', '732732832832')\n.then( function(note){\n    var changes = {title: \"Hola\"};\n    return cozysdk.updateAttributes('Note', '732732832832', changes)\n} )\n.then( function(){\n    // note now is {title: \"Hola\", content: \"world\"}\n})\n */\n\nmodule.exports.updateAttributes = promiser(function(docType, id, attrs, callback) {\n  attrs.docType = docType;\n  return client.put(\"data/merge/\" + id + \"/\", attrs, function(error, response, body) {\n    if (error) {\n      return callback(error);\n    } else if (response.status === 404) {\n      return callback(new Error(\"Document \" + id + \" not found\"));\n    } else if (response.status !== 200) {\n      return callback(new Error(\"\" + response.status + \" -- \" + body.id + \" -- Server error occured.\"));\n    } else {\n      return callback(null, JSON.parse(body));\n    }\n  });\n});\n\n\n/**\nDelete a document by its ID.\n\n@function\n@arg {string} docType - The doctype you want to destroy.\n@arg {string} id - The id of the document you want to destroy.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\ncozysdk.destroy('Note', '732732832832' function(err){\n    // note has been destroyed\n});\n@example <caption>promise</caption>\ncozysdk.destroy('Note', '732732832832')\n.then( function(note){\n    // note has been destroyed\n})\n */\n\nmodule.exports.destroy = promiser(function(docType, id, callback) {\n  return client.del(\"data/\" + id + \"/\", null, function(error, response) {\n    if (error) {\n      return callback(error);\n    } else if (response.status === 404) {\n      return callback(new Error(\"Document \" + id + \" not found\"));\n    } else if (response.status !== 204) {\n      return callback(new Error(\"\" + response.status + \" -- \" + id + \" -- Server error occured.\"));\n    } else {\n      return callback(null);\n    }\n  });\n});\n",
    "// Generated by CoffeeScript 1.8.0\nvar binaries, cozysdk, crud, requests;\n\ncozysdk = exports;\n\ncrud = require('./crud');\n\nbinaries = require('./binaries');\n\nrequests = require('./requests');\n\n\n/**\n Create Read Update Delete Documents\n */\n\ncozysdk.create = crud.create;\n\ncozysdk.find = crud.find;\n\ncozysdk.updateAttributes = crud.updateAttributes;\n\ncozysdk.destroy = crud.destroy;\n\n\n/**\n MapReduce Views Management\n */\n\ncozysdk.defineView = requests.defineView;\n\ncozysdk.queryView = requests.queryView;\n\ncozysdk.destroyByView = requests.destroyByView;\n\n\n/**\n Binaries Management\n */\n\ncozysdk.addBinary = binaries.addBinary;\n\ncozysdk.destroyBinary = binaries.deleteBinary;\n\ncozysdk.getBinaryURL = binaries.getBinaryURL;\n\ncozysdk.defineRequest = requests.defineView;\n\ncozysdk.run = requests.queryView;\n\ncozysdk.destroyRequest = requests.destroyByView;\n\ncozysdk.deleteFile = function(id, name, cb) {\n  return binaries.deleteBinary(null, id, name, cb);\n};\n\ncozysdk.getFileURL = function(id, name, cb) {\n  return binaries.getBinaryURL(null, id, name, cb);\n};\n",
    "// Generated by CoffeeScript 1.8.0\nvar client, promiser;\n\nclient = require('./utils/client');\n\npromiser = require('./utils/promiser');\n\n\n/**\n A node.js style callback.\n @callback callback\n @param {Error} error\n @param {*} [result]\n */\n\n\n/**\n <h2>cozysdk Map Reduce functions</h2>\n\n Queries in cozy are made using couchdb map/reduce view system.\n Read more in the [tutorial]{@tutorial mapreduce}.\n\n @module mapreduce\n @tutorial mapreduce\n */\n\n\n/**\nDefine a map/reduce request for a given doc type.\n\n@function\n\n@arg {string} docType - The doctype you want to create a view on.\n@arg {string} name - The name of the view to create.\n@arg {string|function|object} request - The request to define. it can either be\n        a function, a string (function.toString()) or an object with\n        map & reduce attributes.\n@arg {callback} [callback] - A node.js style callback\n\n@warning Your app needs the permission on the doctype passed as argument.\n\n@example <caption>callback</caption>\nbyTitle = function(doc) { emit(doc.title); }\ncozysdk.defineView('Note', 'all', byTitle, function(err){\n    // view has been created\n});\n@example <caption>promise</caption>\nbyTitle = function(doc) { emit(doc.title); }\ncozysdk.defineView('Note', 'all', byTitle)\n */\n\nmodule.exports.defineView = promiser(function(docType, name, request, callback) {\n  var map, path, reduce, reduceArgsAndBody, view, _ref;\n  if ((_ref = typeof request) === 'function' || _ref === 'string') {\n    request = {\n      map: request\n    };\n  }\n  map = request.map, reduce = request.reduce;\n  if ((reduce != null) && typeof reduce === 'function') {\n    reduce = reduce.toString();\n    reduceArgsAndBody = reduce.slice(reduce.indexOf('('));\n    reduce = \"function \" + reduceArgsAndBody;\n  }\n  view = {\n    reduce: reduce,\n    map: \"function (doc) {\\n    if (doc.docType.toLowerCase() === \\\"\" + (docType.toLowerCase()) + \"\\\") {\\n        filter = \" + (map.toString()) + \";\\n        filter(doc);\\n    }\\n}\"\n  };\n  path = \"request/\" + docType + \"/\" + (name.toLowerCase()) + \"/\";\n  return client.put(path, view, function(error, response, body) {\n    var err, msgStatus;\n    if (error) {\n      return error;\n    } else if (response.status !== 200) {\n      msgStatus = \"expected: 200, got: \" + response.status;\n      err = new Error(\"\" + msgStatus + \" -- \" + body.error + \" -- \" + body.reason);\n      err.status = response.status;\n      return callback(err);\n    } else {\n      return callback(null, body);\n    }\n  });\n});\n\n\n/**\nQuery a map/reduce view.\nIt accepts CouchDB like params.\n\n@function\n\n@arg {string} docType - The doctype you want to query a view on.\n@arg {string} name - The name of the view to query.\n@arg {object} params - The query parameters.\n@param {mixed} [params.key] - Get all entries with this key\n@param {mixed[]} [params.keys] - Get all entries with one of these keys\n@param {mixed} [params.startkey] - Get all entries with key greater than this\n        value\n@param {string} [params.startkey_docid] - Document id to start with (to allow\n        pagination for duplicate startkeys)\n@param {mixed} [params.endkey] - Get all entries with key lesser than this value\n@param {string} [params.endkey_docid] - Last document id to include in the\n        output (to allow pagination for duplicate endkeys)\n@param {number} [params.limit=Infinity] - Limit the number of documents in\n        the output\n@param {number} [params.skip=0] - Skip n number of documents\n@param {boolean} [params.descending=false] - Change the direction of search\n@param {boolean} [params.group=false] - The group option controls whether\n        the reduce function reduces to a set of distinct keys or to a single\n        result row.\n@param {number} [params.group_level] - See below\n@param {boolean} [params.reduce=true] - Use the reduce function of the view.\n        It defaults to true, if a reduce function is defined and to false\n        otherwise.\n@param {boolean} [params.include_docs=false] - Automatically fetch and include\n        the document which emitted each view entry\n@param {boolean} [params.inclusive_end=true] - Controls whether the endkey is\n        included in the result. It defaults to true.\n@param {boolean} [params.update_seq=] - Response includes an update_seq value\n        indicating which sequence id of the database the view reflects\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\nparams = {startkey 'A', endkey: 'B'}\ncozysdk.queryView('Note', 'byTitle', params, function(err){\n    // get all notes with a title starting by A\n});\n@example <caption>promise</caption>\nparams = {startkey 'A', endkey: 'B'}\ncozysdk.queryView('Note', 'byTitle', params)\n */\n\nmodule.exports.queryView = promiser(function(docType, name, params, callback) {\n  var path, _ref;\n  if (typeof params === 'function') {\n    _ref = [{}, params], params = _ref[0], callback = _ref[1];\n  }\n  path = \"request/\" + docType + \"/\" + (name.toLowerCase()) + \"/\";\n  return client.post(path, params, function(error, response, body) {\n    if (error) {\n      return callback(error);\n    } else if (response.status !== 200) {\n      return callback(new Error(\"\" + response.status + \" -- Server error occured.\"));\n    } else {\n      return callback(null, JSON.parse(body));\n    }\n  });\n});\n\n\n/**\nDestroy every documents that would have been returned by a call to\n[queryView]{@link module:mapreduce.queryView} with the same parameters.\nDestroy all DocumentsQuery a map/reduce view.\nIt accepts CouchDB like params.\n\n@function\n@arg {string} docType - The doctype you want to query a view on.\n@arg {string} name - The name of the view to query.\n@arg {object} params - The same query parameters than\n        [queryView]{@link module:mapreduce.queryView}.\n@arg {object} params.limit - <strong>Warning</strong> The limit param is\n        ignored for deletion.\n@arg {callback} [callback] - A node.js style callback\n\n@example <caption>callback</caption>\nparams = {startkey 'A', endkey: 'B'}\ncozysdk.destroyByView('Note', 'byTitle', params, function(err){\n    // destroy all notes with a title starting by A\n});\n@example <caption>promise</caption>\nparams = {startkey 'A', endkey: 'B'}\ncozysdk.destroyByView('Note', 'byTitle', params)\n */\n\nmodule.exports.destroyByView = promiser(function(docType, name, params, callback) {\n  var path, _ref;\n  if (typeof params === 'function') {\n    _ref = [{}, params], params = _ref[0], callback = _ref[1];\n  }\n  path = \"request/\" + docType + \"/\" + (name.toLowerCase()) + \"/destroy/\";\n  return client.put(path, params, function(error, response, body) {\n    var err, msgStatus;\n    if (error) {\n      return error;\n    } else if (response.status !== 204) {\n      msgStatus = \"expected: 204, got: \" + response.status;\n      err = new Error(\"\" + msgStatus + \" -- \" + body.error + \" -- \" + body.reason);\n      err.status = response.status;\n      return callback(err);\n    } else {\n      return callback(null, body);\n    }\n  });\n});\n",
    "// Generated by CoffeeScript 1.8.0\nvar getToken, playRequest;\n\ngetToken = function(callback) {\n  var receiveToken, _ref;\n  receiveToken = function(event) {\n    var appName, token, _ref;\n    window.removeEventListener('message', receiveToken);\n    _ref = event.data, appName = _ref.appName, token = _ref.token;\n    if (typeof callback === \"function\") {\n      callback(null, {\n        appName: appName,\n        token: token\n      });\n    }\n    return callback = null;\n  };\n  if (window.parent == null) {\n    return callback(new Error('no parent window'));\n  }\n  if (!((_ref = window.parent) != null ? _ref.postMessage : void 0)) {\n    return callback(new Error('get a real browser'));\n  }\n  window.addEventListener('message', receiveToken, false);\n  return window.parent.postMessage({\n    action: 'getToken'\n  }, '*');\n};\n\nplayRequest = function(method, path, attributes, callback) {\n  return getToken(function(err, auth) {\n    var basicHeader, xhr;\n    if (err) {\n      return callback(err);\n    }\n    xhr = new XMLHttpRequest;\n    xhr.open(method, \"/ds-api/\" + path, true);\n    xhr.onload = function() {\n      return callback(null, xhr, xhr.response);\n    };\n    xhr.onerror = function(e) {\n      err = \"Request failed : \" + e.target.status;\n      return callback(err);\n    };\n    basicHeader = \"Basic \" + (btoa(auth.appName + ':' + auth.token));\n    xhr.setRequestHeader('Authorization', basicHeader);\n    if ((attributes != null) && attributes instanceof FormData) {\n      return xhr.send(attributes);\n    } else if (attributes) {\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      return xhr.send(JSON.stringify(attributes));\n    } else {\n      return xhr.send();\n    }\n  });\n};\n\nmodule.exports = {\n  get: function(path, attributes, callback) {\n    return playRequest('GET', path, attributes, function(error, response, body) {\n      return callback(error, response, body);\n    });\n  },\n  post: function(path, attributes, callback) {\n    return playRequest('POST', path, attributes, function(error, response, body) {\n      return callback(error, response, body);\n    });\n  },\n  put: function(path, attributes, callback) {\n    return playRequest('PUT', path, attributes, function(error, response, body) {\n      return callback(error, response, body);\n    });\n  },\n  del: function(path, attributes, callback) {\n    return playRequest('DELETE', path, attributes, function(error, response, body) {\n      return callback(error, response, body);\n    });\n  },\n  getToken: getToken\n};\n",
    "// Generated by CoffeeScript 1.8.0\nmodule.exports = function(fn) {\n  var promiseSupport;\n  promiseSupport = 'undefined' !== typeof Promise;\n  if (!promiseSupport) {\n    return fn;\n  }\n  return function() {\n    var arg, args;\n    if ('function' === typeof arguments[arguments.length - 1]) {\n      return fn.apply(this, arguments);\n    }\n    args = (function() {\n      var _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n        arg = arguments[_i];\n        _results.push(arg);\n      }\n      return _results;\n    }).apply(this, arguments);\n    return new Promise((function(_this) {\n      return function(resolve, reject) {\n        args.push(function(err, result) {\n          if (err) {\n            return reject(err);\n          } else {\n            return resolve(result);\n          }\n        });\n        return fn.apply(_this, args);\n      };\n    })(this));\n  };\n};\n"
  ]
}